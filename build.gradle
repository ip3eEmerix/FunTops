plugins {
    id 'java'
}

group = 'org.fun.tops'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
}

dependencies {
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    toolchain {
        languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    archiveBaseName.set('FunTops') // Название JAR-файла
    archiveClassifier.set('') // Убираем classifier
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Исключаем дубликаты

    // Копируем ресурсы в JAR
    from('src/main/resources') {
        include 'plugin.yml'
        include 'config.yml'
        include 'messages.yml'
    }

    manifest {
        attributes(
                'Main-Class': 'org.fun.tops.FunTops', // Главный класс плагина
                'Plugin-Version': project.version,
                'Plugin-Name': 'FunTops',
                'Plugin-Main': 'org.fun.tops.FunTops'
        )
    }
}